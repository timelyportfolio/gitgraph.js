% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gitgraph.R
\name{gitgraph}
\alias{gitgraph}
\title{Create a Graph of 'git' History with 'gitgraph.js'}
\usage{
gitgraph(githistory = NULL, config = NULL, width = NULL, height = NULL,
  elementId = NULL)
}
\arguments{
\item{githistory}{\code{data.frame} from \code{githug::git_history()}
supplemented with a branch name (named \code{branch})
and type (named \code{type}) such as 'commit'}

\item{config}{\code{list} of config options for gitgraph.js}

\item{width, height}{a valid \code{CSS} size unit for the
width and height of the htmlwidget container}

\item{elementId}{a valid \code{CSS} element id for the
htmlwidget container}
}
\description{
Create a Graph of 'git' History with 'gitgraph.js'
}
\examples{
# devtools::install_github("timelyportfolio/gitgraphR")
# devtools::install_github("jennybc/githug")

library(gitgraphR)
library(githug)
library(dplyr)
library(tidyr)
library(tibble)

git_history(n=10) \%>\%
  mutate(
    branch = git_branch_current(),
    type = "commit"
  ) \%>\%
  arrange(when) \%>\%
  tibble::rownames_to_column("id") \%>\%
  nest(-id,-branch,-type) \%>\%
  mutate(details = lapply(data,function(x) as.list(unlist(x)))) \%>\%
  gitgraph()


## add some config options
git_history(n=10) \%>\%
  mutate(
    branch = git_branch_current(),
    type = "commit"
  ) \%>\%
  arrange(when) \%>\%
  tibble::rownames_to_column("id") \%>\%
  nest(-id,-branch,-type) \%>\%
  mutate(details = lapply(data,function(x) as.list(unlist(x)))) \%>\%
  gitgraph(
    config = list(
      template="metro",
      orientation="horizontal",
      mode="compact"
    )
  )


## add other git activity
gh <- git_history(n=10) \%>\%
  mutate(
    branch = git_branch_current(),
    type = "commit"
  ) \%>\%
  arrange(when) \%>\%
  tibble::rownames_to_column("id") \%>\%
  nest(-id,-branch,-type) \%>\%
  mutate(details = lapply(data,function(x) as.list(unlist(x))))

# use a different branch for the first 8 commits
gh[1:8,]$branch <- "develop"

# see the effect of two branches
#   branches are created on JS side automatically
#   when first encountered
gitgraph(gh)

# add merge
add_row(
  gh,
  id = nrow(gh) + 1,
  branch = "develop",
  type = "merge",
  details = list(list(branch="R"))
) \%>\%
  gitgraph()

}

